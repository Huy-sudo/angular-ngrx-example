{"ast":null,"code":"import { getAllCourses } from './../../store/course.selectors';\nimport { courseActionTypes } from './../../store/course.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../services/course.service\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction CoursesListComponent_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function CoursesListComponent_tr_11_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const course_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.showUpdateForm(course_r2));\n    });\n    i0.ɵɵtext(7, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function CoursesListComponent_tr_11_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const course_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteCourse(course_r2.id));\n    });\n    i0.ɵɵtext(9, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const course_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(course_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(course_r2.description);\n  }\n}\n\nfunction CoursesListComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"h4\");\n    i0.ɵɵtext(2, \"Update Course\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 7, 8);\n    i0.ɵɵlistener(\"ngSubmit\", function CoursesListComponent_div_13_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r8);\n\n      const _r6 = i0.ɵɵreference(4);\n\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.updateCourse(_r6));\n    });\n    i0.ɵɵelementStart(5, \"div\", 9)(6, \"label\", 10);\n    i0.ɵɵtext(7, \"Course Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function CoursesListComponent_div_13_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.courseToBeUpdated.name = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 9)(10, \"label\", 12);\n    i0.ɵɵtext(11, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function CoursesListComponent_div_13_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.courseToBeUpdated.description = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"button\", 14);\n    i0.ɵɵtext(14, \"Update\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const _r6 = i0.ɵɵreference(4);\n\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.courseToBeUpdated.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.courseToBeUpdated.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", _r6.invalid);\n  }\n}\n\nexport class CoursesListComponent {\n  constructor(courseService, store) {\n    this.courseService = courseService;\n    this.store = store;\n    this.isUpdateActivated = false;\n  }\n\n  ngOnInit() {\n    this.courses$ = this.store.select(getAllCourses);\n  }\n\n  deleteCourse(courseId) {\n    this.store.dispatch(courseActionTypes.deleteCourse({\n      courseId\n    }));\n  }\n\n  showUpdateForm(course) {\n    this.courseToBeUpdated = { ...course\n    };\n    this.isUpdateActivated = true;\n  }\n\n  updateCourse(updateForm) {\n    const update = {\n      id: this.courseToBeUpdated.id,\n      changes: { ...this.courseToBeUpdated,\n        ...updateForm.value\n      }\n    };\n    this.store.dispatch(courseActionTypes.updateCourse({\n      update\n    }));\n    this.isUpdateActivated = false;\n    this.courseToBeUpdated = null;\n  }\n\n}\n\nCoursesListComponent.ɵfac = function CoursesListComponent_Factory(t) {\n  return new (t || CoursesListComponent)(i0.ɵɵdirectiveInject(i1.CourseService), i0.ɵɵdirectiveInject(i2.Store));\n};\n\nCoursesListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CoursesListComponent,\n  selectors: [[\"app-courses-list\"]],\n  decls: 14,\n  vars: 4,\n  consts: [[1, \"table\", \"table-dark\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"style\", \"margin-top: 50px; margin-left: 50px;\", 4, \"ngIf\"], [1, \"btn\", \"btn-primary\", 2, \"margin\", \"5px\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 2, \"margin\", \"5px\", 3, \"click\"], [2, \"margin-top\", \"50px\", \"margin-left\", \"50px\"], [3, \"ngSubmit\"], [\"updateForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\", 2, \"width\", \"400px\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"side\"], [\"type\", \"text\", \"id\", \"description\", \"name\", \"description\", \"required\", \"\", 1, \"form-control\", 2, \"width\", \"400px\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function CoursesListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"table\", 0)(2, \"thead\")(3, \"tr\")(4, \"th\", 1);\n      i0.ɵɵtext(5, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\", 1);\n      i0.ɵɵtext(7, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\", 1);\n      i0.ɵɵtext(9, \"Operations\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"tbody\");\n      i0.ɵɵtemplate(11, CoursesListComponent_tr_11_Template, 10, 2, \"tr\", 2);\n      i0.ɵɵpipe(12, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(13, CoursesListComponent_div_13_Template, 15, 3, \"div\", 3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(12, 2, ctx.courses$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isUpdateActivated);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i3.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,QAA8B,gCAA9B;AACA,SAASC,iBAAT,QAAkC,8BAAlC;;;;;;;;;;;ICSMC,2BAA4C,CAA5C,EAA4C,IAA5C;IACMA;IAAiBA;IACrBA;IAAIA;IAAwBA;IAC5BA,2BAAI,CAAJ,EAAI,QAAJ,EAAI,CAAJ;IACUA;MAAA;MAAA;MAAA;MAAA,OAASA,gDAAT;IAA+B,CAA/B;IAA6EA;IAAMA;IAC3FA;IAAQA;MAAA;MAAA;MAAA;MAAA,OAASA,iDAAT;IAAgC,CAAhC;IAA6EA;IAAMA;;;;;IAJzFA;IAAAA;IACAA;IAAAA;;;;;;;;IASVA,+BAA4E,CAA5E,EAA4E,IAA5E;IACMA;IAAaA;IACjBA;IAAMA;MAAAA;;MAAA;;MAAA;MAAA,OAAYA,wCAAZ;IAAoC,CAApC;IACJA,+BAAwB,CAAxB,EAAwB,OAAxB,EAAwB,EAAxB;IACoBA;IAAWA;IAC7BA;IAMEA;MAAAA;MAAA;MAAA,OAAaA,sDAAb;IACL,CADK;IANFA;IASFA,+BAAwB,EAAxB,EAAwB,OAAxB,EAAwB,EAAxB;IACoBA;IAAWA;IAC7BA;IAMEA;MAAAA;MAAA;MAAA,OAAaA,8DAAb;IACL,CADK;IANFA;IASFA;IAA8EA;IAAMA;;;;;;;IAdhFA;IAAAA;IAWAA;IAAAA;IAGIA;IAAAA;;;;AD/Bd,OAAM,MAAOC,oBAAP,CAA2B;EAQ/BC,YAAoBC,aAApB,EAA0DC,KAA1D,EAAgF;IAA5D;IAAsC;IAF1D,yBAAoB,KAApB;EAEqF;;EAErFC,QAAQ;IACN,KAAKC,QAAL,GAAgB,KAAKF,KAAL,CAAWG,MAAX,CAAkBT,aAAlB,CAAhB;EACD;;EAEDU,YAAY,CAACC,QAAD,EAAiB;IAC3B,KAAKL,KAAL,CAAWM,QAAX,CAAoBX,iBAAiB,CAACS,YAAlB,CAA+B;MAACC;IAAD,CAA/B,CAApB;EACD;;EAEDE,cAAc,CAACC,MAAD,EAAe;IAC3B,KAAKC,iBAAL,GAAyB,EAAC,GAAGD;IAAJ,CAAzB;IACA,KAAKE,iBAAL,GAAyB,IAAzB;EACD;;EAEDC,YAAY,CAACC,UAAD,EAAgB;IAC1B,MAAMC,MAAM,GAAmB;MAC7BC,EAAE,EAAE,KAAKL,iBAAL,CAAuBK,EADE;MAE7BC,OAAO,EAAE,EACP,GAAG,KAAKN,iBADD;QAEP,GAAGG,UAAU,CAACI;MAFP;IAFoB,CAA/B;IAQA,KAAKhB,KAAL,CAAWM,QAAX,CAAoBX,iBAAiB,CAACgB,YAAlB,CAA+B;MAACE;IAAD,CAA/B,CAApB;IAEA,KAAKH,iBAAL,GAAyB,KAAzB;IACA,KAAKD,iBAAL,GAAyB,IAAzB;EACD;;AApC8B;;;mBAApBZ,sBAAoBD;AAAA;;;QAApBC;EAAoBoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCfjCzB,4BAAK,CAAL,EAAK,OAAL,EAAK,CAAL,EAAK,CAAL,EAAK,OAAL,EAAK,CAAL,EAAK,IAAL,EAAK,CAAL,EAAK,IAAL,EAAK,CAAL;MAIwBA;MAAIA;MACpBA;MAAgBA;MAAWA;MAC3BA;MAAgBA;MAAUA;MAG9BA;MACEA;;MAQFA;MAGFA;MA4BFA;;;;MAvC6BA;MAAAA;MAWrBA;MAAAA","names":["getAllCourses","courseActionTypes","i0","CoursesListComponent","constructor","courseService","store","ngOnInit","courses$","select","deleteCourse","courseId","dispatch","showUpdateForm","course","courseToBeUpdated","isUpdateActivated","updateCourse","updateForm","update","id","changes","value","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\RosenInternship\\AngularJs\\angular-ngrx-example\\src\\app\\course\\component\\courses-list\\courses-list.component.ts","E:\\RosenInternship\\AngularJs\\angular-ngrx-example\\src\\app\\course\\component\\courses-list\\courses-list.component.html"],"sourcesContent":["import { getAllCourses } from './../../store/course.selectors';\r\nimport { courseActionTypes } from './../../store/course.actions';\r\nimport { AppState } from './../../../store/reducers/index';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { Course } from './../../model/course.model';\r\nimport { CourseService } from './../../services/course.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { Update } from '@ngrx/entity';\r\n\r\n@Component({\r\n  selector: 'app-courses-list',\r\n  templateUrl: './courses-list.component.html'\r\n})\r\nexport class CoursesListComponent implements OnInit {\r\n\r\n  courses$!: Observable<Course[]>;\r\n\r\n  courseToBeUpdated!: Course;\r\n\r\n  isUpdateActivated = false;\r\n\r\n  constructor(private courseService: CourseService, private store: Store<AppState>) { }\r\n\r\n  ngOnInit() {\r\n    this.courses$ = this.store.select(getAllCourses);\r\n  }\r\n\r\n  deleteCourse(courseId: string) {\r\n    this.store.dispatch(courseActionTypes.deleteCourse({courseId}));\r\n  }\r\n\r\n  showUpdateForm(course: Course) {\r\n    this.courseToBeUpdated = {...course};\r\n    this.isUpdateActivated = true;\r\n  }\r\n\r\n  updateCourse(updateForm: any) {\r\n    const update: Update<Course> = {\r\n      id: this.courseToBeUpdated.id,\r\n      changes: {\r\n        ...this.courseToBeUpdated,\r\n        ...updateForm.value\r\n      }\r\n    };\r\n\r\n    this.store.dispatch(courseActionTypes.updateCourse({update}));\r\n\r\n    this.isUpdateActivated = false;\r\n    this.courseToBeUpdated = null as any;\r\n  }\r\n}","<div>\r\n  <table class=\"table table-dark\">\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">Name</th>\r\n        <th scope=\"col\">Description</th>\r\n        <th scope=\"col\">Operations</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let course of courses$ | async\">\r\n        <td>{{ course.name }}</td>\r\n        <td>{{ course.description }}</td>\r\n        <td>\r\n          <button (click)=\"showUpdateForm(course)\" class=\"btn btn-primary\" style=\"margin: 5px\">Update</button>\r\n          <button (click)=\"deleteCourse(course.id)\" class=\"btn btn-danger\" style=\"margin: 5px\">Delete</button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n  <div *ngIf=\"isUpdateActivated\" style=\"margin-top: 50px; margin-left: 50px;\">\r\n    <h4>Update Course</h4>\r\n    <form (ngSubmit)=\"updateCourse(updateForm)\" #updateForm=\"ngForm\">\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Course Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          class=\"form-control\"\r\n          required\r\n          [(ngModel)]=\"courseToBeUpdated.name\"\r\n          style=\"width: 400px\"/>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"side\">Description</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"description\"\r\n          name=\"description\"\r\n          class=\"form-control\"\r\n          required\r\n          [(ngModel)]=\"courseToBeUpdated.description\"\r\n          style=\"width: 400px\"/>\r\n      </div>\r\n      <button [disabled]=\"updateForm.invalid\" class=\"btn btn-primary\" type=\"submit\">Update</button>\r\n    </form>\r\n  </div>\r\n</div>"]},"metadata":{},"sourceType":"module"}